<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.akkasource.org/schema/akka"
            targetNamespace="http://www.akkasource.org/schema/akka"
            elementFormDefault="qualified" attributeFormDefault="unqualified"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <xsd:import namespace="http://www.springframework.org/schema/beans"
              schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"/>

  <!-- base types -->

  <!-- restart strategies enumeration -->
  <xsd:simpleType name="failover-type">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="AllForOne"/>
      <xsd:enumeration value="OneForOne"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- restart strategies enumeration -->
  <xsd:simpleType name="lifecycle-type">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="permanent"/>
      <xsd:enumeration value="temporary"/>
    </xsd:restriction>
  </xsd:simpleType>


  <!-- dispatchers enumeration -->
  <xsd:simpleType name="dispatcher-enum-type">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="executor-based-event-driven"/>
      <xsd:enumeration value="reactor-based-thread-pool-event-driven"/>
      <xsd:enumeration value="reactor-based-single-thread-event-driven"/>
      <xsd:enumeration value="thread-based"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- dispatcher queue types enumeration -->
  <xsd:simpleType name="dispatcher-queue-type">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="bounded-linked-blocking-queue"/>
      <xsd:enumeration value="unbounded-linked-blocking-queue"/>
      <xsd:enumeration value="synchronous-queue"/>
      <xsd:enumeration value="bounded-array-blocking-queue"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- thread pool rejection policies enumeration -->
  <xsd:simpleType name="rejection-policy-type">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="abort-policy"/>
      <xsd:enumeration value="caller-runs-policy"/>
      <xsd:enumeration value="discard-oldest-policy"/>
      <xsd:enumeration value="discard-policy"/>
    </xsd:restriction>
  </xsd:simpleType>


  <!-- dispatcher type -->
  <xsd:complexType name="dispatcher-type">
    <xsd:choice minOccurs="0" maxOccurs="1">
      <xsd:element name="thread-pool" type="threadpool-type"/>
    </xsd:choice>
    <xsd:attribute name="id" type="xsd:ID"/>
    <xsd:attribute name="ref" type="xsd:string"/>
    <xsd:attribute name="type" type="dispatcher-enum-type"/>
    <xsd:attribute name="name" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="threadpool-type">
    <xsd:attribute name="queue" type="dispatcher-queue-type"/>
    <xsd:attribute name="bound" type="xsd:integer"/>
    <xsd:attribute name="capacity" type="xsd:integer"/>
    <xsd:attribute name="fairness" type="xsd:boolean"/>
    <xsd:attribute name="core-pool-size" type="xsd:integer"/>
    <xsd:attribute name="max-pool-size" type="xsd:integer"/>
    <xsd:attribute name="keep-alive" type="xsd:long"/>
    <xsd:attribute name="rejection-policy" type="rejection-policy-type"/>    
  </xsd:complexType>

  <!-- Remote -->
  <xsd:complexType name="remote-type">
    <xsd:attribute name="host" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
          Name of the remote host.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="port" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>
          Port of the remote host.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <!-- callbacks -->
  <xsd:complexType name="restart-callbacks-type">
    <xsd:attribute name="pre" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>
          Pre restart callback method that is called during restart.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="post" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>
          Post restart callback method that is called during restart.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <!-- active object -->
  <xsd:complexType name="active-object-type">
    <xsd:all minOccurs="0">
      <xsd:element name="remote" type="remote-type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="restart-callbacks" type="restart-callbacks-type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="dispatcher" type="dispatcher-type" minOccurs="0" maxOccurs="1"/>
      <xsd:element ref="dispatcher" minOccurs="0"/>
    </xsd:all>
    <xsd:attribute name="id" type="xsd:ID"/>
    <xsd:attribute name="target" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
          Name of the target class.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeout" type="xsd:long" use="required">
      <xsd:annotation>
        <xsd:documentation>
          default timeout for '!!' invocations
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="transactional" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
          Set to true if messages should have REQUIRES_NEW semantics
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="interface" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>
          Interface implemented by target class.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="lifecycle" type="lifecycle-type">
      <xsd:annotation>
        <xsd:documentation>
          Lifecycle, permanent or temporary
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <!-- trap exits -->
  <xsd:complexType name="trap-exits-type">
    <xsd:choice minOccurs="1" maxOccurs="unbounded">
      <xsd:element name="trap-exit" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>

  <!-- active objects -->
  <xsd:complexType name="active-objects-type">
    <xsd:choice minOccurs="1" maxOccurs="unbounded">
      <xsd:element name="active-object" type="active-object-type"/>
    </xsd:choice>
  </xsd:complexType>

  <!-- Supervisor strategy -->
  <xsd:complexType name="strategy-type">
    <xsd:sequence>
      <xsd:element name="trap-exits" type="trap-exits-type" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
    <xsd:attribute name="failover" type="failover-type">
      <xsd:annotation>
        <xsd:documentation>
          Failover scheme, AllForOne or OneForOne
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="retries" type="xsd:int">
      <xsd:annotation>
        <xsd:documentation>
          Maximal number of retries.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timerange" type="xsd:int">
      <xsd:annotation>
        <xsd:documentation>
          Timerange for restart.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <!-- Supervisor strategy -->
  <xsd:complexType name="supervision-type">
    <xsd:all>
      <xsd:element name="restart-strategy" type="strategy-type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="active-objects" type="active-objects-type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="supervision" type="supervision-type" minOccurs="0"/>
    </xsd:all>
    <xsd:attribute name="id" type="xsd:ID"/>
  </xsd:complexType>


  <!-- ActiveObject -->
  <xsd:element name="active-object" type="active-object-type"/>

  <!-- Dispatcher -->
  <xsd:element name="dispatcher" type="dispatcher-type"/>

  <!-- Supervision -->
  <xsd:element name="supervision" type="supervision-type"/>

</xsd:schema>
