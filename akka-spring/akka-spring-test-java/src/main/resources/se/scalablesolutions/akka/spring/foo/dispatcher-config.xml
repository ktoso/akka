<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:akka="http://www.akkasource.org/schema/akka" xmlns:beans="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.akkasource.org/schema/akka
       file:////Users/michaelkober/akka/akka-spring/src/main/resources/se/scalablesolutions/akka/spring/akka.xsd">


  <akka:active-object id="active-object-with-dispatcher" target="se.scalablesolutions.akka.spring.foo.MyPojo"
                      timeout="1000">
    <akka:dispatcher type="executor-based-event-driven" name="test"/>
  </akka:active-object>

  <akka:active-object id="active-object-with-dispatcher-ref" target="se.scalablesolutions.akka.spring.foo.MyPojo"
                        timeout="1000">
      <akka:dispatcher ref="executor-event-driven-dispatcher-1"/>
  </akka:active-object>


  <!-- executor-event-driven-dispatcher with bounded-array-blocking-queue -->
  <akka:dispatcher id="executor-event-driven-dispatcher-1" type="executor-based-event-driven" name="myDispatcher">
    <akka:thread-pool queue="bounded-array-blocking-queue"
                      capacity="100"
                      fairness="true"
                      core-pool-size="1"
                      max-pool-size="20"
                      keep-alive="3000"/>
  </akka:dispatcher>

  <!-- executor-event-driven-dispatcher with bounded-linked-blocking-queue with unbounded capacity-->
  <akka:dispatcher id="executor-event-driven-dispatcher-2" type="executor-based-event-driven" name="myDispatcher">
    <akka:thread-pool queue="bounded-linked-blocking-queue"
                      bound="10" />
  </akka:dispatcher>

  <!-- executor-event-driven-dispatcher with unbounded-linked-blocking-queue with bounded capacity-->
  <akka:dispatcher id="executor-event-driven-dispatcher-4" type="executor-based-event-driven" name="myDispatcher">
    <akka:thread-pool queue="unbounded-linked-blocking-queue"
                      capacity="55" />
  </akka:dispatcher>

  <!-- executor-event-driven-dispatcher with unbounded-linked-blocking-queue with unbounded capacity-->
  <akka:dispatcher id="executor-event-driven-dispatcher-5" type="executor-based-event-driven" name="myDispatcher">
    <akka:thread-pool queue="unbounded-linked-blocking-queue" />
  </akka:dispatcher>


  <!-- executor-event-driven-dispatcher with synchronous-queue -->
  <akka:dispatcher id="executor-event-driven-dispatcher-6" type="executor-based-event-driven" name="myDispatcher">
      <akka:thread-pool queue="synchronous-queue" fairness="true" />
  </akka:dispatcher>
 
  <!-- reactor-based-thread-pool-event-driven-dispatcher with synchronous-queue -->
  <akka:dispatcher id="reactor-based-thread-pool-event-driven-dispatcher" type="reactor-based-thread-pool-event-driven" name="myDispatcher">
      <akka:thread-pool queue="synchronous-queue" fairness="true" />
  </akka:dispatcher>

  <akka:dispatcher id="reactor-based-single-thread-event-driven-dispatcher" type="reactor-based-single-thread-event-driven" name="myDispatcher" />

  <akka:supervision id="supervision1">
    <akka:restart-strategy failover="AllForOne" retries="3" timerange="1000">
      <akka:trap-exits>
        <akka:trap-exit>java.io.IOException</akka:trap-exit>
        <akka:trap-exit>java.lang.NullPointerException</akka:trap-exit>
      </akka:trap-exits>
    </akka:restart-strategy>
    <akka:active-objects>
      <akka:active-object target="se.scalablesolutions.akka.spring.foo.Foo" lifecycle="permanent" timeout="1000"/>
      <akka:active-object interface="se.scalablesolutions.akka.spring.foo.IBar"
                          target="se.scalablesolutions.akka.spring.foo.Bar" lifecycle="permanent" timeout="1000"/>
      <akka:active-object target="se.scalablesolutions.akka.spring.foo.MyPojo" lifecycle="temporary" timeout="1000">
        <akka:restart-callbacks pre="preRestart" post="postRestart"/>
      </akka:active-object>
    </akka:active-objects>
  </akka:supervision>

  

</beans>