<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:akka="http://www.akkasource.org/schema/akka"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.akkasource.org/schema/akka
       file:////Users/michaelkober/akka/akka-spring/src/main/resources/se/scalablesolutions/akka/spring/akka.xsd">
 
        <bean   id="wrappedService"
            class="se.scalablesolutions.akka.actor.ActiveObject"
            factory-method="newInstance">
        <constructor-arg index="0" type="java.lang.Class" value="se.scalablesolutions.akka.spring.foo.MyPojo"/>
        <constructor-arg index="1" value="1000"/>
    </bean>
    
    <akka:active-object id="simple-active-object"
                                        target="se.scalablesolutions.akka.spring.foo.MyPojo"
                                        timeout="1000"/>

   <akka:active-object id="simple-active-object-long-timeout"
                                        target="se.scalablesolutions.akka.spring.foo.MyPojo"
                                        timeout="10000"/>
    
    <akka:active-object id="transactional-active-object"
                                        target="se.scalablesolutions.akka.spring.foo.MyPojo"
                                        timeout="2000"
                                        transactional="true"/>
                                        
    <akka:active-object id="active-object-callbacks"
                                        target="se.scalablesolutions.akka.spring.foo.MyPojo"
                                        timeout="2000"
                                        transactional="true">
        <akka:restart-callbacks pre="preRestart" post="postRestart"/>
    </akka:active-object>       
    
    <akka:active-object id="remote-active-object"
                                        target="se.scalablesolutions.akka.spring.foo.MyPojo"
                                        timeout="2000"
                                        transactional="true">
        <akka:restart-callbacks pre="preRestart" post="postRestart"/>
        <akka:remote host="localhost" port="9999" />
    </akka:active-object>                               
    
    <akka:active-object id="remote-service1" target="se.scalablesolutions.akka.spring.foo.MyPojo" timeout="1000">
        <akka:remote host="localhost" port="9999" />
    </akka:active-object>
    
    <akka:supervision id="supervision1">
                <akka:restart-strategy failover="AllForOne" retries="3" timerange="1000">
                  <akka:trap-exits>
                      <akka:trap-exit>java.io.IOException</akka:trap-exit>
                      <akka:trap-exit>java.lang.NullPointerException</akka:trap-exit>
                  </akka:trap-exits>
                </akka:restart-strategy>
                <akka:active-objects>
                          <akka:active-object target="se.scalablesolutions.akka.spring.foo.Foo" lifecycle="permanent" timeout="1000"/>
                          <akka:active-object interface="se.scalablesolutions.akka.spring.foo.IBar" target="se.scalablesolutions.akka.spring.foo.Bar" lifecycle="permanent" timeout="1000"/>
                          <akka:active-object target="se.scalablesolutions.akka.spring.foo.MyPojo" lifecycle="temporary" timeout="1000">
                                  <akka:restart-callbacks pre="preRestart" post="postRestart"/>
                          </akka:active-object>
                  </akka:active-objects>
    </akka:supervision>

    <akka:supervision id="supervision2">
                <akka:restart-strategy failover="AllForOne" retries="3" timerange="5000">
                  <akka:trap-exits>
                      <akka:trap-exit>java.lang.Exception</akka:trap-exit>
                  </akka:trap-exits>
                </akka:restart-strategy>
                <akka:active-objects>
                          <akka:active-object target="se.scalablesolutions.akka.spring.foo.StatefulPojo" lifecycle="permanent" timeout="10000" transactional="true"/>
                  </akka:active-objects>
    </akka:supervision>
   
</beans>