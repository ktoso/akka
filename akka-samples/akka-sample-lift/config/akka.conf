#####################
# Akka Config File #
###################

# This file has all the default settings, so all these could be removed with no visible effect.
# Modify as needed.

<log>
  filename = "./logs/akka.log" 
  roll = "daily"    # Options: never, hourly, daily, sunday/monday/...
  level = "debug"   # Options: fatal, critical, error, warning, info, debug, trace
  console = on
  # syslog_host = ""
  # syslog_server_name = ""
</log>

<akka>
  version = "0.7-SNAPSHOT"

  <actor>
    timeout = 5000              # default timeout for future based invocations
    concurrent-mode = off       # if turned on, then the same actor instance is allowed to execute concurrently -
                                # e.g. departing from the actor model for better performance
    serialize-messages = on    # does a deep clone of (non-primitive) messages to ensure immutability
  </actor>

  <stm>
    service = on
    restart-on-collision = off  # (not implemented yet) if 'on' then it reschedules the transaction,
                                #   if 'off' then throws an exception or rollback for user to handle
    wait-for-completion = 100   # how long time in millis a transaction should be given time to complete when a collision is detected
    wait-nr-of-times = 3        # the number of times it should check for completion of a pending transaction upon collision
    distributed = off           # not implemented yet
  </stm>

  <remote>
    service  = on
    hostname = "localhost"
    port = 9999
    connection-timeout = 1000   # in millis
  </remote>

  <rest>
    service = on
    hostname = "localhost"
    port = 9998
  </rest>
  
  <storage>
    system = "cassandra"   # Options: cassandra (coming: terracotta, redis, tokyo-cabinet, tokyo-tyrant, voldemort, memcached, hazelcast)

    <cassandra>
      service = on
      storage-format = "java"  # Options: java, scala-json, java-json
      blocking = false         # inserts and queries should be blocking or not

      <thrift-server>
        service = on
        pidfile = "akka.pid"
      </thrift-server>
    </cassandra>
  </rest>
</akka>

